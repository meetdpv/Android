

lane :prepare_android do
  # the combination version + build must be unique, so set them here
  android_set_version_name(
    version_name: ENV["APP_VERSION"],
    # use your build.gradle here for non-cordova projects
    gradle_file: "platforms/android/build-extras.gradle"
  )

  android_set_version_code(
    version_code: ENV["BUILD_NUMBER"],
    # use your build.gradle here for non-cordova projects
    gradle_file: "platforms/android/build-extras.gradle"
  )

  # If you'd like to build multiple apps with identical settings, you could add this
  # to set name and identifier based on environment variables:
  # (Remember adjust the project_path, the (old) package_name and set the ANDROID_APP_IDENTIFIER environment variable)
  # this runs from the fastlane-folder, so go to root first.
  #sh(
  #  'project_path="../platforms/android"; '\
  #  'package_name="com.factro.mobileappsmb"; '\
  #  'new_package_name="' + ENV["ANDROID_APP_IDENTIFIER"] + '"; '\
  #  ''\
  #  'folder=$(echo "${package_name}" | sed "s/\./\//g"); '\
  #  'new_folder=$(echo "${new_package_name}" | sed "s/\./\//g"); '\
  #  'new_folder_path="${project_path}/app/src/main/java/${new_folder}"; '\
  #  ''\
  #  'mkdir --parents ${new_folder_path}; '\
  #  'mv ${project_path}/app/src/main/java/${folder}/*.java "${new_folder_path}/"; '\
  #  'find ${project_path}/app/src -name \'*.java\' -type f -exec sed -i "s/${package_name}/${new_package_name}/" {} \\;; '\
  #  'find ${project_path}/app/src -name \'AndroidManifest.xml\' -type f -exec sed -i "s/${package_name}/${new_package_name}/" {} \\;; '\
  #  'find ${project_path}/app -name \'build.gradle\' -type f -exec sed -i "s/${package_name}/${new_package_name}/" {} \\; '
  #)
  #
  # this runs from the fastlane-folder, so go to root first.
  # (Remember to correct this path to point to your strings.xml and set the ANDROID_APP_NAME environment variable )
  #sh(
  #  'sed -i '\
  #  '\'s/"app_name"\([^>]*>\)[^<]*/"app_name"\1' + ENV["ANDROID_APP_NAME"] + '/g\' '\
  #  '../platforms/android/app/src/main/res/values/strings.xml'
  #)
end

lane :build_android do
  build_android_app(
    task: "assemble",
    build_type: "Release",
    project_dir: "platforms/android/",
    properties: {
      "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
      "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
      "android.injected.signing.key.alias" => ENV["SIGNING_KEY_ALIAS"],
      "android.injected.signing.key.password" => ENV["SIGNING_KEY_PASSWORD"]
    }
  )
end

